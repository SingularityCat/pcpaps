Help on module packet.identity.ip6 in packet.identity:

NAME
    packet.identity.ip6

CLASSES
    packet.identity.core.CarrierProtocol(packet.identity.core.Protocol)
        IPv6
    
    class IPv6(packet.identity.core.CarrierProtocol)
     |  Method resolution order:
     |      IPv6
     |      packet.identity.core.CarrierProtocol
     |      packet.identity.core.Protocol
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, data, prev)
     |  
     |  get_attributes(self)
     |      Retrieve a set of attributes describing fields in this protocol.
     |  
     |  get_payload_length(self)
     |      Returns the payload length.
     |  
     |  get_protocol(self)
     |      Returns the protocl number (next header) of this IPv6 header.
     |  
     |  get_route(self)
     |      Returns the route defined by this IPv6 header.
     |  
     |  get_route_reciprocal(self)
     |      Returns the reciprocal route of this IPv6 header.
     |  
     |  replace_hosts(self, hostmap)
     |      Replace source/destination addresses.
     |  
     |  set_attributes(self, attrs)
     |      Alter packet data to match a set of protocol attributes.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  build_attributes(attrstr)
     |      Creates a set of attributes from an attribute string.
     |  
     |  interpret_packet(data, parent)
     |      Interpret packet data for this protocol.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  payload_length
     |  
     |  payload_offset
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  name = 'ip6'
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from packet.identity.core.CarrierProtocol:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from packet.identity.core.Protocol:
     |  
     |  __iter__(self)
     |      Generator method for accessing this/child protocol instances.
     |  
     |  is_complete(self)
     |      Returns True if this and all child protocols are complete.
     |  
     |  match_attributes(self, tattrs)
     |      Tests wether this ProtocolIdentity matches a set of attributes.
     |      This is the default implementation and compares attributes of this
     |      instance (from get_attributes) to the provided attributes (tattrs).
     |      This is not commutative - all of the target keys MUST be in
     |      this ProtocolIdentity's keys. Additionally, if the target's key is
     |      equal to None, it is treated as a wildcard and matches.
     |  
     |  recalculate_checksums(self)
     |      This method should recalculate any kind of checksum used by this
     |      protocol, after any 'child' checksums have been recomputed.
     |      That is to say, the recalculation should propagate up, from the
     |      highest-level protocol to the lowest. The default implementation does
     |      nothing other then this propogation and should suffice for
     |      protocols without validation.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from packet.identity.core.Protocol:
     |  
     |  interpret_stream(stream, parent)
     |      Abstract static method interpret_stream.
     |      Like interpret_packet, this takes two arguments, a 'parent' protocol
     |      instance (which can be none) and a 'stream' object.
     |      This method should create an instance of it's class, determine the next
     |      (if any) protocol to interpret, (setting the next field), then
     |      return said instance.
     |  
     |  reset_state()
     |      This static method should restore the initial state to any kind of
     |      state tracker this class uses. This means, any data held by the class
     |      to associate multiple bits of data (think IP fragmentation or TCP)
     |      should be forgotten.
     |      The default implementation does nothing and should suffice for simple protocols.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from packet.identity.core.Protocol:
     |  
     |  completed
     |  
     |  data
     |  
     |  next
     |  
     |  prev
