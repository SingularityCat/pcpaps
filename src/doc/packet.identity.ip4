Help on module packet.identity.ip4 in packet.identity:

NAME
    packet.identity.ip4

CLASSES
    builtins.object
        FragmentTracker
    packet.identity.core.CarrierProtocol(packet.identity.core.Protocol)
        IPv4
    
    class FragmentTracker(builtins.object)
     |  Used to track fragmented IP packets.
     |  
     |  Methods defined here:
     |  
     |  __init__(self)
     |  
     |  add_fragment(self, frag)
     |      Returns True if packet is complete, False if otherwise.
     |  
     |  try_insert(self, frag)
     |      Try to add a fragment to the frags list.
     |      Tristate return:
     |       - None  = last fragment added.
     |       - True  = fragment added, more needed.
     |       - False = fragment deferred.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  deferred_frags
     |  
     |  frags
     |  
     |  next_offset
    
    class IPv4(packet.identity.core.CarrierProtocol)
     |  Method resolution order:
     |      IPv4
     |      packet.identity.core.CarrierProtocol
     |      packet.identity.core.Protocol
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, data, prev)
     |  
     |  get_attributes(self)
     |      Retrieve a set of attributes describing fields in this protocol.
     |  
     |  get_fraginfo(self)
     |      Returns the flags, fragment offset and fragment ident.
     |  
     |  get_payload_length(self)
     |      Returns the (possibly logical) payload length.
     |  
     |  get_protocol(self)
     |      Returns the protocl number of this IP header.
     |  
     |  get_route(self)
     |      Returns the route defined by this IP header.
     |  
     |  get_route_reciprocal(self)
     |      Returns the reciprocal route of this IP header.
     |  
     |  recalculate_checksums(self)
     |      Recalculate the checksum for this IP header.
     |  
     |  replace_hosts(self, hostmap)
     |      Replace source/destination addresses.
     |  
     |  set_attributes(self, attrs)
     |      Alter packet data to match a set of protocol attributes.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  build_attributes(attrstr)
     |      Creates a set of attributes from an attribute string.
     |  
     |  interpret_packet(data, parent)
     |      Interpret packet data for this protocol.
     |  
     |  reset_state()
     |      Resets the fragment_trackers dict.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  logical_payload_length
     |  
     |  payload_end_ver_ihl
     |  
     |  payload_length
     |  
     |  payload_offset
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  name = 'ip4'
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from packet.identity.core.CarrierProtocol:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from packet.identity.core.Protocol:
     |  
     |  __iter__(self)
     |      Generator method for accessing this/child protocol instances.
     |  
     |  is_complete(self)
     |      Returns True if this and all child protocols are complete.
     |  
     |  match_attributes(self, tattrs)
     |      Tests wether this ProtocolIdentity matches a set of attributes.
     |      This is the default implementation and compares attributes of this
     |      instance (from get_attributes) to the provided attributes (tattrs).
     |      This is not commutative - all of the target keys MUST be in
     |      this ProtocolIdentity's keys. Additionally, if the target's key is
     |      equal to None, it is treated as a wildcard and matches.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from packet.identity.core.Protocol:
     |  
     |  interpret_stream(stream, parent)
     |      Abstract static method interpret_stream.
     |      Like interpret_packet, this takes two arguments, a 'parent' protocol
     |      instance (which can be none) and a 'stream' object.
     |      This method should create an instance of it's class, determine the next
     |      (if any) protocol to interpret, (setting the next field), then
     |      return said instance.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from packet.identity.core.Protocol:
     |  
     |  completed
     |  
     |  data
     |  
     |  next
     |  
     |  prev

FUNCTIONS
    ip4_extract_fragment_info(fragdat)

DATA
    IP4_FLAG_DONT_FRAGMENT = 2
    IP4_FLAG_EVIL_BIT = 4
    IP4_FLAG_MORE_FRAGMENTS = 1
    fragment_trackers = {}
