#!/usr/bin/env python3

# PCPAPU - Packet Capture Processor And Publising Utility

"""
PCPAPU - Packet Capture Processor And Publishing Utility
This module/program contains code used for the interactive tool pcpapu.
Should the tool need to be extended without modifying this file,
it can be imported and extended programatically.
"""
import sys
import argparse

import datetime

import readline
import code

from packetfile import packetfile

pycon = code.InteractiveConsole(locals=locals())


def merge(preaders, relative=True, offset=None):
    """Function that takes a list of PacketReaders, and returns a single list of Packets."""
    # Create a local copy of the 'preaders' argument.
    tails = preaders[:]
    heads = [src.read_packet() for src in tails]
    queues = len(tails)
    packets = []

    while queues > 0:
        # Delete Nones from head/tail lists
        i = 0
        while i < queues:
            if heads[i] is None:
                del heads[i]
                del tails[i]
                queues -= 1
                continue
            else:
                i += 1

        min_p = heads[0]
        min_idx = 0
        for j in range(1, queues):
            if heads[j] < min_p:
                min_p = heads[j]
                min_idx = j
        packets.append(heads[min_idx])
        heads[min_idx] = tails[min_idx].read_packet()
                i += 1

    return packets
    

# Set up the argparse based commandline argument parser.
parser = argparse.ArgumentParser(description="Generate and doctor packet captures.")
parser.add_argument(dest="outpath", help="output file")
parser.add_argument("-i", "--in", dest="inpaths", action="append", required=True, help="Input file")
parser.add_argument("-t", "--time-offset", dest="time_offset", action="store", help="Time offset, in Y/M/D H:M:S format.")

# Logical program entry point.
if __name__ == "__main__":
    arguments = parser.parse_args(sys.argv)
    # Open all packet capture files.
    packetfiles = [packetfile.pf_open_read(path) for path in parser.inpaths]

    pycon.interact()
    
    
